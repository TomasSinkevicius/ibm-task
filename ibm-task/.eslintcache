[{"/Users/tomas/Documents/Github/IBM/ibm-task/src/index.js":"1","/Users/tomas/Documents/Github/IBM/ibm-task/src/reportWebVitals.js":"2","/Users/tomas/Documents/Github/IBM/ibm-task/src/App.js":"3","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/dashboard/dashboard.jsx":"4","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/dashboard/styles.js":"5","/Users/tomas/Documents/Github/IBM/ibm-task/src/validator/company-profiles.js":"6","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/form/form.jsx":"7","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profiles.jsx":"8","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/styles.js":"9","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/form/styles.js":"10","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profile-tile/company-profile-tiles.jsx":"11","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/stock-candles.jsx":"12","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profile-tile/styles.js":"13","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/styles.js":"14","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/stock-candles-diagram/stock-candles-diagram.jsx":"15"},{"size":494,"mtime":1660125720740,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1659947993870,"results":"18","hashOfConfig":"17"},{"size":176,"mtime":1660125572295,"results":"19","hashOfConfig":"17"},{"size":3129,"mtime":1660125630716,"results":"20","hashOfConfig":"17"},{"size":307,"mtime":1660125740326,"results":"21","hashOfConfig":"17"},{"size":657,"mtime":1660125643813,"results":"22","hashOfConfig":"17"},{"size":1026,"mtime":1660125707936,"results":"23","hashOfConfig":"17"},{"size":2459,"mtime":1660125689666,"results":"24","hashOfConfig":"17"},{"size":627,"mtime":1660125737992,"results":"25","hashOfConfig":"17"},{"size":396,"mtime":1660125742390,"results":"26","hashOfConfig":"17"},{"size":619,"mtime":1660125648459,"results":"27","hashOfConfig":"17"},{"size":996,"mtime":1660074913234,"results":"28","hashOfConfig":"17"},{"size":147,"mtime":1660125628467,"results":"29","hashOfConfig":"17"},{"size":236,"mtime":1660125731256,"results":"30","hashOfConfig":"17"},{"size":1130,"mtime":1660074868367,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xs1wa3",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":6,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":13,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":6,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":2,"fixableWarningCount":0,"source":"70"},"/Users/tomas/Documents/Github/IBM/ibm-task/src/index.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/reportWebVitals.js",["71","72"],"const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/App.js",["73"],"import './App.css'\nimport { Dashboard } from './components/dashboard/dashboard'\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  )\n}\n\nexport default App\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/dashboard/dashboard.jsx",["74","75"],"import React, { useState, useEffect } from 'react'\nimport * as Styled from './styles'\nimport axios from 'axios'\nimport { Form } from '../form/form'\nimport { CompanyProfiles } from '../company-profiles/company-profiles'\nimport { validateCompanyName } from '../../validator/company-profiles'\n\nconst initialState = {\n  name: '',\n  dateFrom: '',\n  dateTo: '',\n}\n\n/**\n *\n * @returns\n */\n\nexport const Dashboard = () => {\n  const [searchValue, setSearchValue] = useState(initialState)\n  const [symbols, setSymbols] = useState([])\n  const [count, setCount] = useState(0)\n  const [companyProfileValues, setCompanyProfileValues] = useState([])\n  const [errors, setErrors] = useState('')\n\n  const onFormSubmit = async e => {\n    e.preventDefault()\n    const formErrors = validateCompanyName(searchValue, setErrors)\n\n    if (Object.keys(formErrors).length === 0) {\n      try {\n        const responseSymbols = await getSymbols()\n        console.log('response symbols', responseSymbols)\n        setSymbols(responseSymbols.result)\n        setCount(responseSymbols.count)\n\n        getCompanyProfiles(responseSymbols.result, 0, 5, true)\n        console.log('SYMBOLS ', responseSymbols)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  const getCompanyProfiles = async (sym, from = 0, to = 5, reset = false) => {\n    try {\n      let companyProfiles = await Promise.all(\n        sym\n          .slice(from, sym.length > to ? to : sym.length)\n          .map(async element => await getSingleCompanyProfile(element.symbol)),\n      )\n\n      companyProfiles = companyProfiles.filter(element => {\n        setCount(count => --count)\n        return !!element.name\n      })\n\n      reset\n        ? setCompanyProfileValues(companyProfiles)\n        : setCompanyProfileValues([...companyProfileValues, ...companyProfiles])\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getSingleCompanyProfile = companySymbol => {\n    const FINNHUB_COMPANY_PROFILE_API = `${process.env.REACT_APP_FINNHUB_COMPANY_PROFILE_API}?symbol=${companySymbol}&token=${process.env.REACT_APP_FINNHUB_TOKEN}`\n\n    return axios\n      .get(FINNHUB_COMPANY_PROFILE_API)\n      .then(response => {\n        return response.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const getSymbols = async () => {\n    const FINNHUB_COMPANY_SYMBOLS_API = `${process.env.REACT_APP_FINNHUB_SYMBOLS_SEARCH_API}${searchValue.name}&token=${process.env.REACT_APP_FINNHUB_TOKEN}`\n\n    return axios\n      .get(FINNHUB_COMPANY_SYMBOLS_API)\n      .then(response => response.data)\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <Styled.Container>\n      <Styled.Wrapper>\n        <h1>Search and retrieve companies stock prices</h1>\n        <Form onFormSubmit={onFormSubmit} setSearchValue={setSearchValue} errors={errors} />\n        <CompanyProfiles\n          companyProfileValues={companyProfileValues}\n          count={count}\n          getCompanyProfiles={getCompanyProfiles}\n          symbols={symbols}\n          searchValue={searchValue}\n          setErrors={setErrors}\n        />\n      </Styled.Wrapper>\n    </Styled.Container>\n  )\n}\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/dashboard/styles.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/validator/company-profiles.js",["76","77","78","79","80","81"],"export const validateCompanyName = (values, setError) => {\n  const errors = {}\n  const regex = /^[a-zA-Z ]{1,35}$/\n\n  if (!values.name) {\n    errors.name = 'Company name is required'\n  } else if (!regex.test(values.name)) {\n    errors.name = 'Company name must consist of letters only including space up to 35 characters'\n  }\n\n  setError(errors)\n  return errors\n}\n\nexport const validateDate = (values, setError) => {\n  const errors = {}\n  console.log('Values', values)\n\n  if (!values.dateFrom) {\n    errors.dateFrom = 'Date from is required!'\n  }\n\n  if (!values.dateTo) {\n    errors.dateTo = 'Date to is required!'\n  }\n\n  setError(errors)\n  return errors\n}\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/form/form.jsx",["82","83","84","85","86","87","88","89"],"import React from 'react'\nimport * as Styled from './styles'\n\nexport const Form = ({ onFormSubmit, setSearchValue, errors }) => {\n  const handleOnChange = event => {\n    const { name, value, type } = event.target\n\n    setSearchValue(prev => {\n      if (type === 'date') {\n        let unixDate = convertToUnix(value)\n        return { ...prev, [name]: unixDate }\n      } else return { ...prev, [name]: value }\n    })\n  }\n\n  const convertToUnix = date => Math.floor(new Date(date).getTime() / 1000)\n\n  return (\n    <Styled.FormContainer onSubmit={onFormSubmit}>\n      <label>Company name:</label>\n      <input placeholder='Company name' name='name' onChange={handleOnChange} />\n      <p>{errors.name}</p>\n      <label>Date from:</label>\n      <input type='date' name='dateFrom' onChange={handleOnChange} />\n      <p>{errors.dateFrom}</p>\n      <label>Date to:</label>\n      <input type='date' name='dateTo' onChange={handleOnChange} />\n      <p>{errors.dateTo}</p>\n      <button>Submit</button>\n    </Styled.FormContainer>\n  )\n}\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profiles.jsx",["90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import * as Styled from './styles'\nimport React, { useState, useEffect } from 'react'\nimport { validateDate } from '../../validator/company-profiles'\nimport axios from 'axios'\nimport { StockCandles } from '../stock-candles/stock-candles'\nimport { CompanyProfileTiles } from './company-profile-tile/company-profile-tiles'\n\nexport const CompanyProfiles = ({\n  companyProfileValues,\n  count,\n  getCompanyProfiles,\n  searchValue,\n  setErrors,\n  symbols,\n}) => {\n  const [stockCandles, setStockCandles] = useState({})\n  const [index, setIndex] = useState(0)\n\n  const INTERVAL_OPTIONS = [1, 5, 15, 30, 60]\n  const [interval, setInterval] = useState(INTERVAL_OPTIONS[0])\n\n  const handleClick = () => {\n    let validationResults = validateDate(searchValue, setErrors)\n\n    if (Object.keys(validationResults).length === 0) {\n      handleStockCandles()\n    }\n  }\n\n  const getStockCandles = async () => {\n    return new Promise((resolve, reject) => {\n      const FINNGUB_STOCK_CANDLES_API = `${process.env.REACT_APP_FINNHUB_STOCK_CANDLES_API}?symbol=${searchValue.name}&resolution=${interval}&from=${searchValue.dateFrom}&to=${searchValue.dateTo}&token=${process.env.REACT_APP_FINNHUB_TOKEN}`\n\n      axios\n        .get(FINNGUB_STOCK_CANDLES_API)\n        .then(response => {\n          resolve(response.data)\n        })\n        .catch(err => reject(err))\n    })\n  }\n\n  const handleStockCandles = async () => {\n    try {\n      const responseCandles = await getStockCandles()\n      setStockCandles(responseCandles)\n      setIndex(1)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    handleStockCandles()\n  }, [interval])\n\n  return (\n    <Styled.Section>\n      {index === 1 ? (\n        <StockCandles\n          setIndex={setIndex}\n          stockCandles={stockCandles}\n          setInterval={setInterval}\n          INTERVAL_OPTIONS={INTERVAL_OPTIONS}\n        />\n      ) : (\n        <>\n          <CompanyProfileTiles\n            companyProfileValues={companyProfileValues}\n            handleClick={handleClick}\n          />\n          {companyProfileValues.length < count && (\n            <button\n              onClick={() =>\n                getCompanyProfiles(\n                  symbols,\n                  companyProfileValues.length + 1,\n                  companyProfileValues.length + 5,\n                )\n              }\n            >\n              Get more\n            </button>\n          )}\n        </>\n      )}\n    </Styled.Section>\n  )\n}\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/styles.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/components/form/styles.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profile-tile/company-profile-tiles.jsx",["104","105","106","107","108"],"import React from 'react'\nimport * as Styled from './styles'\n\nexport const CompanyProfileTiles = ({ companyProfileValues, handleClick }) => {\n  return (\n    <Styled.TilesContainer>\n      {companyProfileValues?.map((companyProfile, index) => (\n        <div key={index} className='single-tile'>\n          <button onClick={handleClick}>\n            <p>name : {companyProfile.name}</p>\n          </button>\n          <p>country : {companyProfile.country}</p>\n          <p>currency : {companyProfile.currency}</p>\n          <p>web url : {companyProfile.weburl}</p>\n        </div>\n      ))}\n    </Styled.TilesContainer>\n  )\n}\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/stock-candles.jsx",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React from \"react\";\nimport { StockCandlesDiagram } from \"./stock-candles-diagram/stock-candles-diagram\";\n\nimport * as Styled from \"./styles\";\n\nexport const StockCandles = ({\n  setIndex,\n  stockCandles,\n  INTERVAL_OPTIONS,\n  setInterval,\n}) => {\n  const handleChangeInterval = (event) => setInterval(event.target.value);\n  console.log(\"stockCandles.s ===\", stockCandles.s === \"ok\");\n\n  return (\n    <Styled.StockCandlesContainer>\n      <Styled.TopSection>\n        <button onClick={() => setIndex(0)}>Back to list</button>\n        <select onChange={handleChangeInterval}>\n          {INTERVAL_OPTIONS.map((s) => (\n            <option key={s} value={s}>\n              {s === 1 ? `Past ${s} day` : `Past ${s} days `}\n            </option>\n          ))}\n        </select>\n      </Styled.TopSection>\n      {stockCandles.s === \"ok\" ? (\n        <StockCandlesDiagram stockCandles={stockCandles} />\n      ) : (\n        <p className=\"\">No data</p>\n      )}\n    </Styled.StockCandlesContainer>\n  );\n};\n","/Users/tomas/Documents/Github/IBM/ibm-task/src/components/company-profiles/company-profile-tile/styles.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/styles.js",[],"/Users/tomas/Documents/Github/IBM/ibm-task/src/components/stock-candles/stock-candles-diagram/stock-candles-diagram.jsx",["124","125","126","127","128"],"import React from \"react\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nexport const StockCandlesDiagram = ({ stockCandles }) => {\n  const transformData = (data) => {\n    return data.c.map((item, index) => ({\n      close: Number(item).toFixed(2),\n      open: Number(data.o[index]).toFixed(2),\n      timestamp: new Date(data.t[index] * 1000).toLocaleDateString(),\n    }));\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart\n        width={900}\n        height={500}\n        data={transformData(stockCandles)}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        className=\"line-chart\"\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" />\n        <YAxis type=\"number\" allowDecimals={true} allowDataOverflow={true} />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"open\" stroke=\"blue\" dot={false} />\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"gray\" dot={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n",{"ruleId":"129","severity":1,"message":"130","line":1,"column":25,"nodeType":"131","messageId":"132","endLine":1,"endColumn":39},{"ruleId":"129","severity":1,"message":"133","line":1,"column":25,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"136","messageId":"132","endLine":4,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":1,"column":27,"nodeType":"134","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":19,"column":26,"nodeType":"131","messageId":"132","endLine":19,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":1,"column":36,"nodeType":"131","messageId":"132","endLine":1,"endColumn":57},{"ruleId":"129","severity":1,"message":"140","line":1,"column":37,"nodeType":"134","messageId":"135","endLine":1,"endColumn":43},{"ruleId":"129","severity":1,"message":"141","line":1,"column":45,"nodeType":"134","messageId":"135","endLine":1,"endColumn":53},{"ruleId":"129","severity":1,"message":"130","line":15,"column":29,"nodeType":"131","messageId":"132","endLine":15,"endColumn":50},{"ruleId":"129","severity":1,"message":"140","line":15,"column":30,"nodeType":"134","messageId":"135","endLine":15,"endColumn":36},{"ruleId":"129","severity":1,"message":"141","line":15,"column":38,"nodeType":"134","messageId":"135","endLine":15,"endColumn":46},{"ruleId":"129","severity":1,"message":"130","line":4,"column":21,"nodeType":"131","messageId":"132","endLine":4,"endColumn":66},{"ruleId":"129","severity":1,"message":"142","line":4,"column":22,"nodeType":"143","messageId":"144","endLine":4,"endColumn":62},{"ruleId":"145","severity":2,"message":"146","line":4,"column":24,"nodeType":"147","messageId":"148","endLine":4,"endColumn":36},{"ruleId":"145","severity":2,"message":"149","line":4,"column":38,"nodeType":"147","messageId":"148","endLine":4,"endColumn":52},{"ruleId":"145","severity":2,"message":"150","line":4,"column":54,"nodeType":"147","messageId":"148","endLine":4,"endColumn":60},{"ruleId":"145","severity":2,"message":"151","line":22,"column":18,"nodeType":"134","messageId":"148","endLine":22,"endColumn":22},{"ruleId":"145","severity":2,"message":"152","line":25,"column":18,"nodeType":"134","messageId":"148","endLine":25,"endColumn":26},{"ruleId":"145","severity":2,"message":"153","line":28,"column":18,"nodeType":"134","messageId":"148","endLine":28,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":8,"column":32,"nodeType":"131","messageId":"132","endLine":15,"endColumn":6},{"ruleId":"129","severity":1,"message":"142","line":8,"column":33,"nodeType":"143","messageId":"144","endLine":15,"endColumn":2},{"ruleId":"145","severity":2,"message":"154","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":23},{"ruleId":"145","severity":2,"message":"155","line":10,"column":3,"nodeType":"147","messageId":"148","endLine":10,"endColumn":8},{"ruleId":"145","severity":2,"message":"156","line":11,"column":3,"nodeType":"147","messageId":"148","endLine":11,"endColumn":21},{"ruleId":"145","severity":2,"message":"157","line":12,"column":3,"nodeType":"147","messageId":"148","endLine":12,"endColumn":14},{"ruleId":"145","severity":2,"message":"158","line":13,"column":3,"nodeType":"147","messageId":"148","endLine":13,"endColumn":12},{"ruleId":"145","severity":2,"message":"159","line":14,"column":3,"nodeType":"147","messageId":"148","endLine":14,"endColumn":10},{"ruleId":"145","severity":2,"message":"160","line":32,"column":114,"nodeType":"134","messageId":"148","endLine":32,"endColumn":118},{"ruleId":"145","severity":2,"message":"161","line":32,"column":162,"nodeType":"134","messageId":"148","endLine":32,"endColumn":170},{"ruleId":"145","severity":2,"message":"162","line":32,"column":189,"nodeType":"134","messageId":"148","endLine":32,"endColumn":195},{"ruleId":"145","severity":2,"message":"163","line":72,"column":33,"nodeType":"134","messageId":"148","endLine":72,"endColumn":39},{"ruleId":"145","severity":2,"message":"163","line":77,"column":40,"nodeType":"134","messageId":"148","endLine":77,"endColumn":46},{"ruleId":"145","severity":2,"message":"163","line":78,"column":40,"nodeType":"134","messageId":"148","endLine":78,"endColumn":46},{"ruleId":"129","severity":1,"message":"130","line":4,"column":36,"nodeType":"131","messageId":"132","endLine":4,"endColumn":78},{"ruleId":"129","severity":1,"message":"142","line":4,"column":37,"nodeType":"143","messageId":"144","endLine":4,"endColumn":74},{"ruleId":"145","severity":2,"message":"154","line":4,"column":39,"nodeType":"147","messageId":"148","endLine":4,"endColumn":59},{"ruleId":"145","severity":2,"message":"164","line":4,"column":61,"nodeType":"147","messageId":"148","endLine":4,"endColumn":72},{"ruleId":"145","severity":2,"message":"165","line":7,"column":30,"nodeType":"134","messageId":"148","endLine":7,"endColumn":33},{"ruleId":"166","severity":2,"message":"167","line":1,"column":19,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26,"fix":"170"},{"ruleId":"166","severity":2,"message":"167","line":2,"column":37,"nodeType":"168","messageId":"169","endLine":2,"endColumn":84,"fix":"171"},{"ruleId":"166","severity":2,"message":"167","line":4,"column":25,"nodeType":"168","messageId":"169","endLine":4,"endColumn":35,"fix":"172"},{"ruleId":"129","severity":1,"message":"130","line":6,"column":29,"nodeType":"131","messageId":"132","endLine":11,"endColumn":6},{"ruleId":"129","severity":1,"message":"142","line":6,"column":30,"nodeType":"143","messageId":"144","endLine":11,"endColumn":2},{"ruleId":"145","severity":2,"message":"173","line":7,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":11},{"ruleId":"145","severity":2,"message":"174","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":15},{"ruleId":"145","severity":2,"message":"175","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":19},{"ruleId":"145","severity":2,"message":"176","line":10,"column":3,"nodeType":"147","messageId":"148","endLine":10,"endColumn":14},{"ruleId":"166","severity":2,"message":"167","line":13,"column":15,"nodeType":"168","messageId":"169","endLine":13,"endColumn":35,"fix":"177"},{"ruleId":"145","severity":2,"message":"178","line":13,"column":50,"nodeType":"134","messageId":"148","endLine":13,"endColumn":51},{"ruleId":"166","severity":2,"message":"167","line":13,"column":56,"nodeType":"168","messageId":"169","endLine":13,"endColumn":60,"fix":"179"},{"ruleId":"145","severity":2,"message":"180","line":20,"column":29,"nodeType":"134","messageId":"148","endLine":20,"endColumn":32},{"ruleId":"145","severity":2,"message":"178","line":27,"column":21,"nodeType":"134","messageId":"148","endLine":27,"endColumn":22},{"ruleId":"166","severity":2,"message":"167","line":27,"column":27,"nodeType":"168","messageId":"169","endLine":27,"endColumn":31,"fix":"181"},{"ruleId":"166","severity":2,"message":"167","line":1,"column":19,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26,"fix":"182"},{"ruleId":"166","severity":2,"message":"167","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":18,"fix":"183"},{"ruleId":"129","severity":1,"message":"130","line":12,"column":36,"nodeType":"131","messageId":"132","endLine":12,"endColumn":57},{"ruleId":"129","severity":1,"message":"142","line":12,"column":37,"nodeType":"143","messageId":"144","endLine":12,"endColumn":53},{"ruleId":"145","severity":2,"message":"174","line":12,"column":39,"nodeType":"147","messageId":"148","endLine":12,"endColumn":51},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'onPerfEntry' should be typed.","Identifier","missingArgType","FunctionDeclaration","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","unusedVar","Argument 'values' should be typed.","Argument 'setError' should be typed.","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","react/prop-types","'onFormSubmit' is missing in props validation","Property","missingPropType","'setSearchValue' is missing in props validation","'errors' is missing in props validation","'errors.name' is missing in props validation","'errors.dateFrom' is missing in props validation","'errors.dateTo' is missing in props validation","'companyProfileValues' is missing in props validation","'count' is missing in props validation","'getCompanyProfiles' is missing in props validation","'searchValue' is missing in props validation","'setErrors' is missing in props validation","'symbols' is missing in props validation","'searchValue.name' is missing in props validation","'searchValue.dateFrom' is missing in props validation","'searchValue.dateTo' is missing in props validation","'companyProfileValues.length' is missing in props validation","'handleClick' is missing in props validation","'companyProfileValues.map' is missing in props validation","quotes","Strings must use singlequote.","Literal","wrongQuotes",{"range":"184","text":"185"},{"range":"186","text":"187"},{"range":"188","text":"189"},"'setIndex' is missing in props validation","'stockCandles' is missing in props validation","'INTERVAL_OPTIONS' is missing in props validation","'setInterval' is missing in props validation",{"range":"190","text":"191"},"'stockCandles.s' is missing in props validation",{"range":"192","text":"193"},"'INTERVAL_OPTIONS.map' is missing in props validation",{"range":"194","text":"193"},{"range":"195","text":"185"},{"range":"196","text":"197"},[18,25],"'react'",[63,110],"'./stock-candles-diagram/stock-candles-diagram'",[137,147],"'./styles'",[341,361],"'stockCandles.s ==='",[382,386],"'ok'",[826,830],[18,25],[143,153],"'recharts'"]