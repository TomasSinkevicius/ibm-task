{"ast":null,"code":"export var validateCompanyName = function validateCompanyName(values, setError) {\n  var errors = {};\n  var regex = /^[a-zA-Z ]{1,35}$/;\n\n  if (!values.name) {\n    errors.name = \"Company name is required\";\n  } else if (!regex.test(values.name)) {\n    errors.name = \"Company name must consist of letters only including space up to 35 characters\";\n  }\n\n  setError(errors);\n  return errors;\n};\nexport var validateDate = function validateDate(values, setError) {\n  var errors = {};\n\n  if (!values.dateFrom) {\n    errors.dateFrom = \"Date from is required!\";\n  }\n\n  setError(errors);\n  return errors;\n};","map":{"version":3,"names":["validateCompanyName","values","setError","errors","regex","name","test","validateDate","dateFrom"],"sources":["/Users/tomas/Documents/Github/IBM/ibm-task/src/validator/company-profiles.js"],"sourcesContent":["export const validateCompanyName = (values, setError) => {\n  const errors = {};\n  const regex = /^[a-zA-Z ]{1,35}$/;\n\n  if (!values.name) {\n    errors.name = \"Company name is required\";\n  } else if (!regex.test(values.name)) {\n    errors.name =\n      \"Company name must consist of letters only including space up to 35 characters\";\n  }\n\n  setError(errors);\n  return errors;\n};\n\nexport const validateDate = (values, setError) => {\n  const errors = {};\n\n  if (!values.dateFrom) {\n    errors.dateFrom = \"Date from is required!\";\n  }\n\n  setError(errors);\n  return errors;\n};\n"],"mappings":"AAAA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAASC,QAAT,EAAsB;EACvD,IAAMC,MAAM,GAAG,EAAf;EACA,IAAMC,KAAK,GAAG,mBAAd;;EAEA,IAAI,CAACH,MAAM,CAACI,IAAZ,EAAkB;IAChBF,MAAM,CAACE,IAAP,GAAc,0BAAd;EACD,CAFD,MAEO,IAAI,CAACD,KAAK,CAACE,IAAN,CAAWL,MAAM,CAACI,IAAlB,CAAL,EAA8B;IACnCF,MAAM,CAACE,IAAP,GACE,+EADF;EAED;;EAEDH,QAAQ,CAACC,MAAD,CAAR;EACA,OAAOA,MAAP;AACD,CAbM;AAeP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACN,MAAD,EAASC,QAAT,EAAsB;EAChD,IAAMC,MAAM,GAAG,EAAf;;EAEA,IAAI,CAACF,MAAM,CAACO,QAAZ,EAAsB;IACpBL,MAAM,CAACK,QAAP,GAAkB,wBAAlB;EACD;;EAEDN,QAAQ,CAACC,MAAD,CAAR;EACA,OAAOA,MAAP;AACD,CATM"},"metadata":{},"sourceType":"module"}